let
  true = \t\f.t;
  false = \t\f.f;
  zero = false;
  one = \x.x;
  succ = \n\f\x.f(n f x);
  two = succ one;
  three = succ two;
  four = succ three;
  five = succ four;
  six = succ five;
  seven = succ six;
  tail = \l.l false;
  F = \f\n\z.z n (f (succ n));
  sm = \n.n F (\x.\z.z zero false) one;
  raver = \y\x.let z=x tail (sm seven) true in y (raver z) z;
  laver = \x\y.raver y x;
  pref0 = \l\z.z true l;
  test = laver zero seven pref0;
in test

-- n:=5; while table(n,1,32)=2^n do n:=n+1; od;

--  y 0 1 2 3 4 5 6 7
-- x
-- 0  1 3 5 7 1 3 5 7
-- 1  2 3 6 7 2 3 6 7
-- 2  3 7 3 7 3 7 3 7
-- 3  4 5 6 7 4 5 6 7
-- 4  5 7 5 7 5 7 5 7
-- 5  6 7 6 7 6 7 6 7
-- 6  7 7 7 7 7 7 7 7
-- 7  0 1 2 3 4 5 6 7


-- table:=function(n,x,y)
-- if x=2^n-1 then return y
-- elif y=0 then return RemInt(x+1,2^n)
-- else return table(n,table(n,x,y-1),x+1);fi;end;

-- n:=5; while table(n,1,32)=2^n do n:=n+1; od;

-- test:=true; n:=0;
-- while test=true do
--   for m in [0..n] do
--     if table(n,2,2^m)=2^n and not table(n,2,2^m)=2^n then
--       test:=false;
--     fi
--   od
-- od
