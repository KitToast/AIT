let
  true = \t\f.t;
  false = \t\f.f;
  zero = false;
  succ = \n\f\x.f(n f x);
  Zero = false;
  Succ = \n\z\s.s n;
  one = Succ Zero;
  two = Succ one;
  three = Succ two;
  snd = \ab.ab (\a\b.b);
  add = \x\y. x y (\n  Succ (add n y));

  myF = \c\sn\nf.c(succ sn)(\x.sn(nf x));
  myfac = \n.n myF false id id;
  F = \f\n.n(f(succ n));
  fac = \n\f.n F(\x.f)id

  pref0 = \l\z.z True l;
  laver 
  test = laver three five pref0
in test

--  y 0 1 2 3 4 5 6 7
-- x
-- 0  1 3 5 7 1 3 5 7
-- 1  2 3 6 7 2 3 6 7
-- 2  3 7 3 7 3 7 3 7
-- 3  4 5 6 7 4 5 6 7
-- 4  5 7 5 7 5 7 5 7
-- 5  6 7 6 7 6 7 6 7
-- 6  7 7 7 7 7 7 7 7
-- 7  0 1 2 3 4 5 6 7


-- table:=function(n,x,y)
-- if x=2^n-1 then return y
-- elif y=0 then return RemInt(x+1,2^n)
-- else return table(n,table(n,x,y-1),x+1);fi;end;

-- T 

-- n:=5; while table(n,1,32)=2^n do n:=n+1; od;

-- test:=true; n:=0;
-- while test=true do
--   for m in [0..n] do
--     if table(n,2,2^m)=2^n and not table(n,2,2^m)=2^n then
--       test:=false;
--     fi
--   od
-- od
