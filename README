This software allows one to run some experiments with
binary lambda calculus as a vehicle for Algorithmic Information Theory.

To run a lambda calculus machine:

  ./blc run program_file

where program_file holds the programa text, e.g.

  ./blc run id.lam

The machine takes its input from stdin, so this works just like cat with no argument.

You can do
  make prog.blc
or 
  make prog.Blc
to compile programs for universal machine uni.lam or the byte oriented uni8.lam

Run the bit-oriented universal machine with

  ./blc run uni.lam [conditional data]

and the byte-oriented universal machine

  ./blc run8 uni8.lam [conditional data]

For a list of more actions, run

  ./blc help

See the lambda source files *.lam for more examples.

In the absence of a Haskell runtime environment, one can use
the perl blc interpreter blc.pl to run blc programs;
perl blc.pl is equivalent to ./blc run uni.lam, while perl blc.pl -8 is the
byte oriented verion, equivalent to ./blc run8 uni.lam.
This interpreter doesn't support conditional arguments though.

See http://en.wikipedia.org/wiki/Binary_lambda_calculus
for background information and the paper LC.pdf for technical details.

credits:
Module Lambda is derived from Lennart Augustsson's
http://www.augustsson.net/Darcs/Lambda/
Chris Hendrie and Bertram Felgenhauer contributed code and ideas
